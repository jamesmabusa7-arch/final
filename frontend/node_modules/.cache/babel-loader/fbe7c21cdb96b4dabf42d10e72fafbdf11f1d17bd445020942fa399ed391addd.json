{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/3D Objects/luct12/LUCT_Reporting_App/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";// Base API URL - will use environment variable in production\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE=process.env.REACT_API_URL||\"http://localhost:5000\";export default function Login(_ref){let{setUser}=_ref;const[form,setForm]=useState({username:\"\",password:\"\"});const[msg,setMsg]=useState(\"\");const handleChange=e=>{setForm(_objectSpread(_objectSpread({},form),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();setMsg(\"\");try{const res=await fetch(\"\".concat(API_BASE,\"/api/login\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(form)});const data=await res.json();if(!res.ok){setMsg(data.error||\"❌ Login failed\");return;}// save user\nconst user={id:data.userId,role:data.role,token:data.token,username:data.username};localStorage.setItem(\"user\",JSON.stringify(user));localStorage.setItem(\"token\",data.token);// Also store token separately for API calls\nsetUser(user);setMsg(\"✅ Login successful!\");}catch(err){console.error(err);setMsg(\"❌ Server error - cannot connect to backend\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),msg&&/*#__PURE__*/_jsx(\"div\",{className:\"alert \".concat(msg.includes('✅')?'alert-success':'alert-danger'),children:msg}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:form.username,onChange:handleChange,className:\"form-control\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:form.password,onChange:handleChange,className:\"form-control\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Login\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","API_BASE","process","env","REACT_API_URL","Login","_ref","setUser","form","setForm","username","password","msg","setMsg","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","res","fetch","concat","method","headers","body","JSON","stringify","data","json","ok","error","user","id","userId","role","token","localStorage","setItem","err","console","children","className","includes","onSubmit","type","onChange","required"],"sources":["C:/Users/Admin/3D Objects/luct12/LUCT_Reporting_App/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Base API URL - will use environment variable in production\r\nconst API_BASE = process.env.REACT_API_URL || \"http://localhost:5000\";\r\n\r\nexport default function Login({ setUser }) {\r\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE}/api/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setMsg(data.error || \"❌ Login failed\");\r\n        return;\r\n      }\r\n\r\n      // save user\r\n      const user = {\r\n        id: data.userId,\r\n        role: data.role,\r\n        token: data.token,\r\n        username: data.username\r\n      };\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      localStorage.setItem(\"token\", data.token); // Also store token separately for API calls\r\n      setUser(user);\r\n      setMsg(\"✅ Login successful!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMsg(\"❌ Server error - cannot connect to backend\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      {msg && <div className={`alert ${msg.includes('✅') ? 'alert-success' : 'alert-danger'}`}>{msg}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={form.username}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}